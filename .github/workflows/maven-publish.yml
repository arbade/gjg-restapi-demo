# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  SERVICE: arda # google run service name
  REGION: us-central1

on: # When do you want it to run
  push: # When pushed to master branch 
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn clean install & mkdir staging && cp target/*jar-with-dependencies.jar staging
      #run: mkdir staging && cp target/*jar-with-dependencies.jar staging
      #  - uses: actions/upload-artifact@v1
      #    with:
      #      name: Package
      #      path: staging
    - name: Checkout
      uses: actions/checkout@v2
     # Sets up the gcloud cli with the credentials we previously created, and will be storing within Github as secrets.
    - name: Setup Cloud cli
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
       # Configure Docker with Credentials
    - name: Authorize Docker push
      run: gcloud auth configure-docker
    #- name: Build and Push Container
    #  run: |-
    #    docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} .
    #    docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
    - name: demo-checkout
      run: |-
         pwd
         ls -la
    - name: Build and push Docker  
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: ${{ env.PROJECT_ID }}/${{ env.SERVICE }}
        tags: ${{  github.sha }}
        registry: gcr.io
        username: _json_key
        password: ${{ secrets.GCP_SA_KEY }}
    - name: Deploy to Cloud Run
      id: gohibeesh
      uses: google-github-actions/deploy-cloudrun@v0.4.0
      with:
        service: ${{ env.SERVICE }}
        image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
        region: ${{ env.REGION }}
    - name: Show Output
      run: echo ${{ steps.gohibeesh.outputs.url }} 
